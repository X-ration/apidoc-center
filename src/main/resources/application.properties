# 应用服务 WEB 访问端口
server.port=8080
# 启用指定环境的配置文件
spring.profiles.active=dev
# 不启用Whitelabel页面
server.error.whitelabel.enabled=false
#设置单个文件大小，单位MB和KB都可以
spring.servlet.multipart.max-file-size=2MB
#设置总上传的数据大小，单位MB和KB都可以
spring.servlet.multipart.max-request-size=2MB

# 数据源配置
datasource.master.url=
datasource.master.username=
datasource.master.password=
datasource.slave.url=
datasource.slave.username=
datasource.slave.password=
spring.jpa.show-sql=true
spring.jpa.open-in-view=true

# OAuth2 github
spring.security.oauth2.client.registration.github.client-id=Ov23liLA62C26LUKXEOi
spring.security.oauth2.client.registration.github.client-secret=
# 定义Github登录请求中拼接的redirectUri参数
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/user/login/oauth2/callback/github
# 定义从Github获取的用户信息中哪一个属性作为名称的属性，以便通过getName方法获取
spring.security.oauth2.client.provider.github.user-name-attribute=login
#spring.security.oauth2.client.provider.github.user-info-authentication-method=header
# OAuth2 huawei
spring.security.oauth2.client.registration.huawei.client-id=112985827
spring.security.oauth2.client.registration.huawei.client-secret=
spring.security.oauth2.client.registration.huawei.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.huawei.redirect-uri={baseUrl}/user/login/oauth2/callback/huawei
spring.security.oauth2.client.registration.huawei.scope=[https://www.huawei.com/auth/account/base.profile,https://ads.cloud.huawei.com/report,https://ads.cloud.huawei.com/promotion,https://ads.cloud.huawei.com/tools,https://ads.cloud.huawei.com/account,https://ads.cloud.huawei.com/finance]
# 这里要明确指定否则调用Access Token url参数会缺少clientId/clientSecret
spring.security.oauth2.client.registration.huawei.client-authentication-method=post
spring.security.oauth2.client.provider.huawei.authorization-uri=https://oauth-login.cloud.huawei.com/oauth2/v2/authorize
spring.security.oauth2.client.provider.huawei.token-uri=https://oauth-login.cloud.huawei.com/oauth2/v2/token
spring.security.oauth2.client.provider.huawei.user-info-uri=https://account.cloud.huawei.com/rest.php?nsp_svc=GOpen.User.getInfo
spring.security.oauth2.client.provider.huawei.user-name-attribute=displayName

# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache=true
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML——HTML5已过时)
spring.thymeleaf.mode=HTML
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html